'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _query = require('../query');

var has = Object.prototype.hasOwnProperty,
    transform = 'transform',
    transition = {},
    transitionTiming = void 0,
    transitionDuration = void 0,
    transitionProperty = void 0,
    transitionDelay = void 0,
    backfaceVisibility = void 0;

var prefix = void 0,
    transitionEnd = void 0;

if (_query.canUseDOM) {
  transition = getTransitionProperties();

  var _getTransitionPropert = getTransitionProperties();

  prefix = _getTransitionPropert.prefix;
  transitionEnd = _getTransitionPropert.transitionEnd;


  transform = prefix + '-' + transform;
  transitionProperty = prefix + '-transition-property';
  transitionDuration = prefix + '-transition-duration';
  transitionDelay = prefix + '-transition-delay';
  transitionTiming = prefix + '-transition-timing-function';
  backfaceVisibility = prefix + '-backface-visibility';
}

function getTransitionProperties() {
  var style = document.createElement('div').style;

  var vendorMap = {
    O: function O(e) {
      return 'o' + e.toLowerCase();
    },
    Moz: function Moz(e) {
      return e.toLowerCase();
    },
    Webkit: function Webkit(e) {
      return 'webkit' + e;
    },
    ms: function ms(e) {
      return 'MS' + e;
    }
  };

  var vendors = Object.keys(vendorMap);
  var transitionEnd = void 0,
      animationEnd = void 0;
  var prefix = '';

  for (var i = 0; i < vendors.length; i++) {
    var vendor = vendors[i];

    if (vendor + 'TransitionProperty' in style) {
      prefix = '-' + vendor.toLowerCase();
      transitionEnd = vendorMap[vendor]('TransitionEnd');
      animationEnd = vendorMap[vendor]('AnimationEnd');
      break;
    }
  }

  if (!transitionEnd && 'transitionProperty' in style) {
    transitionEnd = 'transitionend';
  }

  if (!animationEnd && 'animationName' in style) {
    animationEnd = 'animationend';
  }

  style = null;

  return {
    animationEnd: animationEnd,
    transitionEnd: transitionEnd,
    prefix: prefix
  };
}

exports.default = {
  backfaceVisibility: backfaceVisibility,
  transform: transform,
  end: transitionEnd,
  property: transitionProperty,
  timing: transitionTiming,
  delay: transitionDelay,
  duration: transitionDuration
};